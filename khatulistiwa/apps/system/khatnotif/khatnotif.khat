/*
 * ============================================================================
 * khatnotif.khat - Sistem Notifikasi Realtime Khatulistiwa OS
 * Copyright (c) 2025 Dhafa Nazula Permadi & Team BIGCode By Cv Bintang Gumilang Group
 * ============================================================================
 * 
 * Sistem notifikasi lengkap dengan fitur:
 * 1. Notifikasi realtime dengan suara gamelan
 * 2. Kontrol izin aplikasi dengan UI tradisional
 * 3. Riwayat notifikasi dengan tema batik
 * 4. Mode jangan ganggu dengan ornamen wayang
 * 5. Notifikasi interaktif dengan animasi garuda
 */

import "khatui/runtime.khat"
import "khatcore/system.khat"
import "khatcore/process.khat"
import "khataudio/gamelan.khat"
import "khatui/cultural.khat"
import "khatui/animations.khat"

// Konstanta aplikasi
konstan NOTIF_VERSION = "1.0.0"
konstan MAX_NOTIFICATIONS = 100
konstan MAX_HISTORY = 1000
konstan NOTIFICATION_WIDTH = 350
konstan NOTIFICATION_HEIGHT = 100
konstan ANIMATION_DURATION = 300

// Prioritas notifikasi
enum NotificationPriority {
    CRITICAL = 0,
    HIGH = 1,
    NORMAL = 2,
    LOW = 3
}

// Tipe notifikasi
enum NotificationType {
    SYSTEM = 0,
    SECURITY = 1,
    APP = 2,
    UPDATE = 3,
    NETWORK = 4
}

// Status notifikasi
enum NotificationStatus {
    PENDING = 0,
    DISPLAYED = 1,
    DISMISSED = 2,
    INTERACTED = 3,
    EXPIRED = 4
}

// Struktur notifikasi
struct Notification {
    id: string,
    title: string,
    message: string,
    type: NotificationType,
    priority: NotificationPriority,
    app_id: string,
    timestamp: time_t,
    status: NotificationStatus,
    cultural_icon: string,
    sound_file: string,
    actions: NotificationAction[],
    display_duration: int,
    is_persistent: bool,
    cultural_style: string
}

// Aksi notifikasi
struct NotificationAction {
    id: string,
    label: string,
    cultural_label: string,
    icon: string,
    cultural_icon: string,
    callback: string
}

// Pengaturan izin aplikasi
struct AppPermission {
    app_id: string,
    app_name: string,
    permissions: PermissionSetting[],
    notification_enabled: bool,
    sound_enabled: bool,
    priority_override: NotificationPriority
}

// Pengaturan izin individual
struct PermissionSetting {
    permission_id: string,
    permission_name: string,
    cultural_name: string,
    granted: bool,
    request_count: int,
    last_requested: time_t
}

// State aplikasi
struct NotificationState {
    active_notifications: Notification[],
    notification_history: Notification[],
    app_permissions: AppPermission[],
    do_not_disturb: bool,
    dnd_start_time: time_t,
    dnd_end_time: time_t,
    notification_style: string,
    sound_enabled: bool,
    vibration_enabled: bool,
    cultural_mode: bool,
    batik_theme: string,
    main_window: int,
    overlay_window: int,
    permission_window: int
}

// Global state
var notif_state: NotificationState
var notification_queue: Notification[MAX_NOTIFICATIONS]
var queue_head: int = 0
var queue_tail: int = 0

// Inisialisasi sistem notifikasi
fungsi notif_init() -> int {
    khat_log("[NOTIF] Menginisialisasi KhatNotif v" + NOTIF_VERSION)
    
    // Setup state awal
    notif_state.do_not_disturb = false
    notif_state.notification_style = "traditional"
    notif_state.sound_enabled = true
    notif_state.vibration_enabled = true
    notif_state.cultural_mode = true
    notif_state.batik_theme = "sekar_jagad"
    
    // Inisialisasi audio gamelan
    if (gamelan_audio_init() != 0) {
        khat_log("[ERROR] Gagal menginisialisasi audio gamelan")
        return -1
    }
    
    // Buat window overlay untuk notifikasi
    if (create_notification_overlay() != 0) {
        khat_log("[ERROR] Gagal membuat overlay notifikasi")
        return -1
    }
    
    // Load pengaturan izin aplikasi
    if (load_app_permissions() != 0) {
        khat_log("[WARNING] Gagal memuat pengaturan izin aplikasi")
    }
    
    // Load riwayat notifikasi
    if (load_notification_history() != 0) {
        khat_log("[WARNING] Gagal memuat riwayat notifikasi")
    }
    
    // Register sebagai service sistem
    if (register_notification_service() != 0) {
        khat_log("[ERROR] Gagal mendaftarkan service notifikasi")
        return -1
    }
    
    // Setup event handlers
    setup_notification_events()
    
    khat_log("[NOTIF] KhatNotif berhasil diinisialisasi!")
    return 0
}

// Buat overlay notifikasi
fungsi create_notification_overlay() -> int {
    khat_log("[NOTIF] Membuat overlay notifikasi...")
    
    notif_state.overlay_window = khatui_create_overlay_window(
        khat_screen_width() - NOTIFICATION_WIDTH - 20,
        20,
        NOTIFICATION_WIDTH,
        khat_screen_height() - 40,
        OVERLAY_TYPE_NOTIFICATION
    )
    
    if (notif_state.overlay_window < 0) {
        return -1
    }
    
    // Set window properties
    khatui_set_window_always_on_top(notif_state.overlay_window, true)
    khatui_set_window_click_through(notif_state.overlay_window, false)
    khatui_set_window_cultural_theme(notif_state.overlay_window, notif_state.batik_theme)
    
    return 0
}

// Tampilkan notifikasi baru
fungsi show_notification(notif: Notification*) -> int {
    if (!notif) {
        return -1
    }
    
    // Cek mode jangan ganggu
    if (notif_state.do_not_disturb && notif->priority != CRITICAL) {
        // Simpan ke queue untuk ditampilkan nanti
        add_to_notification_queue(notif)
        return 0
    }
    
    // Cek izin aplikasi
    if (!check_app_notification_permission(notif->app_id)) {
        khat_log("[NOTIF] Notifikasi ditolak untuk app: " + notif->app_id)
        return -1
    }
    
    // Hitung posisi notifikasi
    var y_position = calculate_notification_position()
    
    // Buat window notifikasi
    var notif_window = create_notification_window(notif, y_position)
    if (notif_window < 0) {
        return -1
    }
    
    // Render notifikasi dengan tema budaya
    render_cultural_notification(notif_window, notif)
    
    // Putar suara gamelan
    if (notif_state.sound_enabled && notif->sound_file[0] != '\0') {
        play_cultural_sound(notif->sound_file, notif->priority)
    }
    
    // Animasi masuk dengan efek garuda
    animate_notification_entrance(notif_window)
    
    // Setup timer untuk auto-dismiss
    if (notif->display_duration > 0) {
        setup_notification_timer(notif_window, notif->display_duration)
    }
    
    // Tambah ke daftar aktif
    add_to_active_notifications(notif)
    
    // Tambah ke riwayat
    add_to_notification_history(notif)
    
    khat_log("[NOTIF] Notifikasi ditampilkan: " + notif->title)
    return 0
}

// Render notifikasi dengan tema budaya
fungsi render_cultural_notification(window: int, notif: Notification*) -> void {
    // Clear window
    khatui_clear_window(window)
    
    // Background dengan motif batik
    draw_notification_background(window, notif)
    
    // Icon budaya
    draw_cultural_notification_icon(window, notif)
    
    // Konten notifikasi
    draw_notification_content(window, notif)
    
    // Aksi notifikasi
    draw_notification_actions(window, notif)
    
    // Border ornamen
    draw_cultural_border(window, notif)
}

// Gambar background notifikasi
fungsi draw_notification_background(window: int, notif: Notification*) -> void {
    var bg_color = get_priority_color(notif->priority)
    var pattern_color = get_cultural_color("batik_subtle")
    
    // Background dasar
    khatui_fill_rect(window, 0, 0, NOTIFICATION_WIDTH, NOTIFICATION_HEIGHT, bg_color)
    
    // Overlay motif batik halus
    khatui_draw_batik_pattern(window, 0, 0, NOTIFICATION_WIDTH, NOTIFICATION_HEIGHT,
                              notif_state.batik_theme, pattern_color, 0.1)
    
    // Gradient overlay untuk depth
    khatui_draw_gradient_overlay(window, 0, 0, NOTIFICATION_WIDTH, NOTIFICATION_HEIGHT,
                                 "notification_gradient")
}

// Gambar icon budaya notifikasi
fungsi draw_cultural_notification_icon(window: int, notif: Notification*) -> void {
    var icon_size = 40
    var icon_x = 15
    var icon_y = (NOTIFICATION_HEIGHT - icon_size) / 2
    
    // Background icon dengan ornamen
    var icon_bg = get_cultural_color("icon_bg")
    khatui_draw_rounded_rect(window, icon_x - 5, icon_y - 5,
                             icon_size + 10, icon_size + 10, 8, icon_bg)
    
    // Icon budaya
    khatui_draw_cultural_icon(window, icon_x, icon_y, icon_size, icon_size,
                              notif->cultural_icon, get_priority_color(notif->priority))
    
    // Animasi berkedip untuk prioritas tinggi
    if (notif->priority == CRITICAL || notif->priority == HIGH) {
        khatui_add_icon_animation(window, icon_x, icon_y, icon_size, icon_size,
                                  "pulse", 1000)
    }
}

// Gambar konten notifikasi
fungsi draw_notification_content(window: int, notif: Notification*) -> void {
    var content_x = 70
    var content_y = 15
    var content_width = NOTIFICATION_WIDTH - content_x - 15
    
    // Judul notifikasi
    khatui_draw_text_cultural(window, content_x, content_y,
                              notif->title, get_cultural_color("notif_title"),
                              "notification_title")
    
    // Pesan notifikasi
    khatui_draw_text_wrapped_cultural(window, content_x, content_y + 25,
                                      content_width, 40,
                                      notif->message, get_cultural_color("notif_message"),
                                      "notification_message")
    
    // Timestamp dengan format Indonesia
    var time_text = format_indonesian_time(notif->timestamp)
    khatui_draw_text_cultural(window, content_x, content_y + 70,
                              time_text, get_cultural_color("notif_time"),
                              "notification_time")
    
    // Nama aplikasi
    var app_name = get_app_display_name(notif->app_id)
    khatui_draw_text_cultural(window, content_x + 150, content_y + 70,
                              app_name, get_cultural_color("notif_app"),
                              "notification_app")
}

// Gambar aksi notifikasi
fungsi draw_notification_actions(window: int, notif: Notification*) -> void {
    if (notif->actions.length == 0) {
        return
    }
    
    var action_y = NOTIFICATION_HEIGHT - 30
    var action_x = 70
    var action_width = 80
    var action_spacing = 10
    
    for (var i = 0; i < notif->actions.length && i < 3; i++) {
        var action = &notif->actions[i]
        
        // Background tombol dengan ornamen
        var button_bg = get_cultural_color("action_button_bg")
        khatui_draw_rounded_rect(window, action_x, action_y,
                                action_width, 20, 4, button_bg)
        
        // Icon aksi
        khatui_draw_cultural_icon(window, action_x + 5, action_y + 2,
                                  16, 16, action->cultural_icon,
                                  get_cultural_color("action_icon"))
        
        // Label aksi
        khatui_draw_text_cultural(window, action_x + 25, action_y + 5,
                                  action->cultural_label, get_cultural_color("action_text"),
                                  "action_label")
        
        // Click handler
        khatui_add_click_handler(window, action_x, action_y,
                                action_width, 20, "action_click", i)
        
        action_x += action_width + action_spacing
    }
}

// Putar suara budaya
fungsi play_cultural_sound(sound_file: string, priority: NotificationPriority) -> void {
    var volume = get_priority_volume(priority)
    
    // Load dan putar suara gamelan
    var sound_id = gamelan_load_sound(sound_file)
    if (sound_id >= 0) {
        gamelan_play_sound(sound_id, volume)
        
        // Tambah efek reverb untuk suara tradisional
        gamelan_add_reverb_effect(sound_id, "traditional_hall")
    }
}

// Animasi masuk notifikasi
fungsi animate_notification_entrance(window: int) -> void {
    // Animasi slide dari kanan dengan efek garuda
    khatui_animate_window_slide(window, "slide_from_right", ANIMATION_DURATION)
    
    // Efek fade in
    khatui_animate_window_fade(window, "fade_in", ANIMATION_DURATION / 2)
    
    // Efek bounce halus
    khatui_animate_window_bounce(window, "gentle_bounce", ANIMATION_DURATION)
}

// Kontrol izin aplikasi
fungsi show_permission_control(app_id: string) -> int {
    khat_log("[NOTIF] Menampilkan kontrol izin untuk: " + app_id)
    
    // Buat window kontrol izin
    notif_state.permission_window = khatui_create_window(
        "Kontrol Izin Aplikasi",
        (khat_screen_width() - 600) / 2,
        (khat_screen_height() - 500) / 2,
        600, 500,
        khat_get_current_app_id()
    )
    
    if (notif_state.permission_window < 0) {
        return -1
    }
    
    // Render UI kontrol izin
    render_permission_control_ui(app_id)
    
    return 0
}

// Render UI kontrol izin
fungsi render_permission_control_ui(app_id: string) -> void {
    // Clear window
    khatui_clear_window(notif_state.permission_window)
    
    // Background dengan motif batik
    draw_cultural_background_permission()
    
    // Header dengan info aplikasi
    draw_app_info_header(app_id)
    
    // Daftar izin dengan toggle budaya
    draw_permission_list(app_id)
    
    // Tombol aksi
    draw_permission_actions()
}

// API untuk aplikasi lain
fungsi khatnotif_send_notification(title: string, message: string, 
                                   type: NotificationType, priority: NotificationPriority,
                                   app_id: string) -> int {
    var notif: Notification
    
    notif.id = generate_notification_id()
    notif.title = title
    notif.message = message
    notif.type = type
    notif.priority = priority
    notif.app_id = app_id
    notif.timestamp = khat_get_current_time()
    notif.status = PENDING
    notif.cultural_icon = get_type_cultural_icon(type)
    notif.sound_file = get_type_sound_file(type)
    notif.display_duration = get_priority_duration(priority)
    notif.is_persistent = (priority == CRITICAL)
    notif.cultural_style = notif_state.notification_style
    
    return show_notification(&notif)
}

// Entry point aplikasi
fungsi main() -> int {
    if (notif_init() != 0) {
        return -1
    }
    
    // Main event loop
    while (true) {
        var event = khatui_get_next_event()
        if (event.type == "quit") {
            break
        }
        
        handle_notification_event(event.type, event.data)
        
        // Process notification queue
        process_notification_queue()
        
        khat_sleep(16)
    }
    
    // Cleanup
    notif_cleanup()
    
    return 0
}
